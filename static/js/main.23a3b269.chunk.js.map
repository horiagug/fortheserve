{"version":3,"sources":["components/StyledComponents/Banner.js","components/StyledComponents/Headings.js","components/StyledComponents/Button.js","components/Home.js","components/StyledComponents/Tables.js","api.js","components/Leaderboard/Leaderboard.js","components/AddGame/Playerselector.js","components/AddGame/Addgame.js","components/PlayerManagement/Playermanagement.js","components/RecentGames/RecentGames.js","components/Player/Player.js","components/Game.js","components/Container.js","App.js","serviceWorker.js","index.js"],"names":["Banner","styled","div","_templateObject","P","p","_templateObject2","CTA","_templateObject3","H1","h1","Headings_templateObject","H2","h2","Headings_templateObject2","Button","button","Button_templateObject","props","primary","Home","react_default","a","createElement","href","Component","API_URL","TH","th","Tables_templateObject","Table","table","Tables_templateObject2","TR","tr","Tables_templateObject3","TD","td","_templateObject4","Leaderboard","_this","this","players","sort","b","elo","className","map","player","key","id","name","onClick","delete","api","fetch","method","then","response","json","data","headers","Accept","Content-Type","body","JSON","stringify","text","winner_id","loser_id","date","catch","error","console","PlayerSelector","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","handleSelect","bind","assertThisInitialized","event","setState","target","value","onPlayerSelected","onChange","Addgame","winner","loser","added","player_id","_this2","preventDefault","hasOwnProperty","window","location","reload","color","renderLoser","isEnabled","renderMessage","onSubmit","handleSubmit","Playerselector","selectWinner","disabled","selectLoser","type","Playermanagement","handleNameChange","playerName","length","canBeSubmitted","placeholder","RecentGames","games","Date","Player","_id","Game","confirmAlert","title","message","buttons","label","onDelete","deleted","deleteGame","toLocaleString","components_Player_Player","winner_elo_change","loser_elo_change","Container","deletePlayerPopUp","onDeletePlayer","gameAdded","game","components_Game","_this3","array","toConsumableArray","filter","obj","_this4","components_Home","components_RecentGames_RecentGames","components_Leaderboard_Leaderboard","AddGame_Addgame","PlayerManagement_Playermanagement","App","react_router_dom","react_router","path","component","onEnter","document","getElementById","scrollIntoView","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.23a3b269.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst Banner = styled.div`\n    color: white;\n    background: url(https://images.unsplash.com/photo-1511067007398-7e4b90cfa4bc?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1049&q=80);\n    background-size: cover;\n    background-position: center; \n    height: 30rem;\n    display: flex;  \n    flex-flow: row wrap;\n   align-content: center;\n`;\n\nconst P = styled.p`\nmargin: auto;\nline-height: 1.5;\ncolor: #fff;\nfont-size: 1.2rem;\ntext-align: center;\nflex: 1 100%;\nfont-weight: 300;\n`;\n\nconst CTA = styled.div`\nmargin: auto;\n`;\n\nexport {Banner, P, CTA}","import React from 'react'\nimport styled from 'styled-components'\n\nconst H1 = styled.h1`\n    margin: auto;\n    text-transform: uppercase;\n    line-height: 1;\n    font-size: 3.75rem;\n    font-weight: 900;\n    color: #fff;\n    text-align: center;\n    flex: 1 100%;\n`;\n\nconst H2 = styled.h2`\n    margin: 20px, auto;\n    text-transform: uppercase;\n    line-height: 1;\n    font-size:2 rem;\n    font-weight: 600;\n    text-align: center;\n    felx: 1 100%`;\n\nexport {H1, H2}","import React from 'react'\nimport styled from 'styled-components'\n\nconst Button = styled.button`\n  background: ${props => props.primary ? \"#6fc13e\" : \"#0002\"};\n  \n  color: white;\n  font-size: 1em;\n  text-transform: uppercase;\n  font-weight: 700;\n  letter-spacing: 0.5px;\n  text-align: center;\n\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: ${props => props.primary? \"2px solid transparent\" : \"2px solid white\"};\n  border-radius : 100px;\n  \n  transition: background 0.5s;\n\n  :hover {\n      background: ${props => props.primary ? \"#1c880d\" : \"white\"}\n      color: ${props => props.primary ? \"white\" : \"black\"};\n  }\n`;\n\nexport {Button}","import React, { Component } from \"react\";\nimport {Banner,P, CTA} from \"./StyledComponents/Banner\";\nimport { H1 } from \"./StyledComponents/Headings\";\nimport {Button} from \"./StyledComponents/Button\";\n\nclass Home extends Component {\n    render() {\n        return(\n            <Banner>\n                 <H1>For The Serve</H1>\n                    <P> Yousician employee ping pong score keeping app.</P>\n                    <CTA>\n                        <Button primary href=\"/addgame\"> Add A Game </Button>\n                        <Button > View Leaderboard </Button>\n                    </CTA>\n            </Banner>\n        )\n    }\n}\n\nexport default Home;","import React from 'react'\nimport styled from 'styled-components'\n\nconst TH = styled.th`\n   background: #f0f0f0;\n   margin: auto;\n   width:13%\n   text-align: center;\n\n`;\n\nconst Table= styled.table`\n   margin: auto;\n   width: 80%\n`;\n\nconst TR = styled.tr`\n`;\n\nconst TD = styled.td`\n   text-align: center;\n   border-bottom: 2px dashed rgba(192, 192, 192, .3);\n`;\n\nexport {TH, TR, TD, Table}","\nlet API_URL \nprocess.env.REACT_APP_STAGE === 'dev'\n  ? API_URL = ''\n  : API_URL = 'https://fortheserve.herokuapp.com'\n\n\nexport default {\n\n    // Players API:\n    // Returns a list of players in JSON\n    getPlayers(){\n        let players = fetch(API_URL + '/api/players',\n            {method: 'GET'}).then((response) => response.json())\n        return players;\n    },\n\n    // Returns the player or 404\n    // Returned player data:\n    // {\n    // \t\"_id\": string,\n    // \t\"name\": string,\n    // \t\"elo\": int\n    // }\n    getPlayer(id){\n        let player = fetch(API_URL +'/api/players/' +id,\n            {method: 'GET'}).then((response) => response.json())\n        return player;\n    },\n\n    // Add player:\n    // [POST] /players\n    // Data: {\"name\": string}\n    // Returns: Added player\n    addPlayer(name){\n        var data = {\n            \"name\" : name,\n        }\n        let response = fetch(API_URL +'/api/players',\n            {\n                method: 'POST',\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type' : 'application/json'\n                },\n                body: JSON.stringify(data)\n            }).then((response => response.json()))\n        return response\n    },\n\n    // Delete player:\n    // [DELETE] /players/{id}\n    // Returns: 204 if success, 404 otherwise\n\n    deletePlayer(id){\n        let response = fetch(API_URL +'/api/players/' + id,\n            {method: \"DELETE\"}).then((response => response.text()))\n        return response\n    },\n    // Games API:\n\n    // Returns a list of games in JSON\n    getGames(){\n        let games = fetch(API_URL +'/api/games',\n            {method: 'GET'}).then((response) => response.json())\n        return games;\n    },\n\n    //Get game:\n    // [GET] /games/{id}\n    // Returns: Game or 404\n    // Returned game data:\n    // {\n    // \t\"_id\": string,\n    // \t\"date\": string, UTC-ISO\n    // \t\"winner_id\": string,\n    // \t\"loser_id\": string,\n    // \t\"winner_elo_change\": int,\n    // \t\"loser_elo_change\": int\n    // }\n\n    getGame(id){\n        let game = fetch(API_URL +'/api/games/' + id,\n            {method:'GET'}).then((response) => response.json())\n        return game\n    },\n\n    addGame(winner_id, loser_id, date){\n        var data = {\n            winner_id: winner_id,\n            loser_id: loser_id,\n        }\n        if (date) {\n            data.date = date;\n        }\n       let response = fetch(API_URL +'/api/games',\n            {\n                method: 'POST',\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type' : 'application/json'\n                },\n                body: JSON.stringify(data)\n            })\n            .then((response) => response.json())\n            .catch((error) => {\n                console.error(error);\n            });\n        return response\n    },\n\n    deleteGame(id){\n        let response = fetch(API_URL +'/api/games/' + id,\n            {method: \"DELETE\"}).then((response => response.text()))\n        return response\n    }\n}","import React, { Component } from 'react';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport {Button} from \"./../StyledComponents/Button\"\nimport {H2} from \"./../StyledComponents/Headings\"\nimport {TH, TR,TD, Table} from \"./../StyledComponents/Tables\"\n\nclass Leaderboard extends Component {\n    render() {\n        this.props.players.sort((a, b) => b.elo - a.elo)\n        return (\n        <div className = \"Leaderboard\">\n            <H2>Leaderboard</H2>\n            <Table>\n              <tbody>\n                <TR>\n                  <TH>Player</TH>\n                  <TH>ELO</TH>\n                  <TH>Delete</TH>\n                </TR>\n                {this.props.players.map((player) => \n                <TR key={player.id}>\n                  <TD>{player.name}</TD>\n                  <TD>{player.elo}</TD>\n                  <TD> <Button onClick={() => { this.props.delete(player.id) }} ><i className=\"far fa-trash-alt\"></i></Button> </TD>\n                </TR>\n                )\n              }\n              </tbody>\n            </Table>\n        </div>\n    )\n    }\n}\n\nexport default Leaderboard;","import React, { Component } from \"react\";\n\nclass PlayerSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name : this.props.name ? this.props.name : \"Select Player\",\n            player: null,\n        };\n\n        this.handleSelect = this.handleSelect.bind(this)    \n    }\n\n    handleSelect(event){\n        this.setState({player: event.target.value});\n        this.props.onPlayerSelected(event.target.value)\n    }\n    \n    render() {\n        return(\n            <div>\n                <label>{this.state.name}: </label>\n                <select  name={this.state.name} onChange = {this.handleSelect} value= {this.state.player}>\n                {\n                this.props.players.map((player) => \n                    <option \n                        key={player.id} \n                        value={player.id} > {player.name} </option>\n                )\n                }\n                 </select>\n                 </div>    \n            //     {\n            //         this.state.showMenu ? (\n            //             <div className = \"menu\" ref={(element) => { this.dropdownWinner = element;}} >\n            //                 {this.props.players.map((player) => \n            //                     <button key={player.id} onClick={this.handleSelect.bind(this, player.id, player.name)} > {player.name} </button>\n            //                 )}\n            //             </div>\n            //         ) : ( null )\n            //     }\n            // </div>\n        )\n    }\n}\n\nexport default PlayerSelector","import React, { Component } from \"react\";\nimport api from \"./../../api\"\nimport PlayerSelector from \"./Playerselector\"\nimport {Button} from \"./../StyledComponents/Button\"\n\nclass Addgame extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            winner: null,\n            loser: null,\n            added: false,\n        };\n    }\n\n   selectWinner(player_id) {\n       this.setState({\n          winner : player_id,\n        })\n      }\n\n      selectLoser(player_id) {\n        this.setState({\n          loser: player_id,\n        })\n      }\n\n    handleSubmit(event) {\n      event.preventDefault();\n      api.addGame(this.state.winner, this.state.loser)\n      .then ( json => {\n        if (json.hasOwnProperty('_id')){\n          this.setState({\n            added:true,\n            winner: null,\n            loser: null,\n          })\n          window.location.reload()\n        }\n      })\n    } \n\n    renderMessage() {\n      if (!this.state.added) {\n        return (\n          <p color='black'> Add a game below: </p>\n        )\n      }\n      else {\n        return (\n          <p color='green'> Game Added successfully </p>\n        )\n      }\n    }\n    \n    render() {\n      const renderLoser = this.state.winner != null;\n      let loserDisplay;\n\n      const isEnabled = this.state.winner != null && this.state.loser != null\n\n        return(\n            <div>\n                <h2> Add Game </h2>\n                {this.renderMessage()}\n                <form onSubmit={this.handleSubmit.bind(this)}>\n                  <PlayerSelector \n                    players= {this.props.players} \n                    name=\"Select Winning Player\" \n                    onPlayerSelected={this.selectWinner.bind(this)}\n                    disabled={false} />\n\n                    <PlayerSelector \n                          players={this.props.players} \n                          name=\"Select Losing Player\" \n                          onPlayerSelected={this.selectLoser.bind(this)}\n                          disabled={!renderLoser} />\n                        }\n                  \n                  <Button primary disabled={!isEnabled} type=\"submit\">Submit Game</Button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Addgame;","import React, { Component } from \"react\";\nimport api from \"../../api\";\n\nimport {Button} from \"./../StyledComponents/Button\"\n\nclass Playermanagement extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            playerName : \"\",\n            added : false,\n        }\n        this.onSubmit = this.onSubmit.bind(this)\n        this.handleNameChange = this.handleNameChange.bind(this)\n    }\n\n    onSubmit(event){\n        event.preventDefault();\n        api.addPlayer(this.state.playerName)\n        .then ( json => {\n            if (json.hasOwnProperty('_id')){\n              this.setState({\n                added:true,\n                playerName : \"\"\n              })\n              window.location.reload()\n            }\n          })\n    }\n\n    handleNameChange = event => {\n        this.setState({playerName: event.target.value})\n    }\n\n    canBeSubmitted() {\n        return this.state.playerName.length > 0\n    }\n\n    render() {\n        const isEnabled = this.canBeSubmitted()\n        return(\n            <div>\n                <h2> Add Player </h2>\n                <form onSubmit = {this.onSubmit}>\n                    <input \n                    placeholder=\"Player name\"\n                    type=\"text\"\n                    value={this.state.playerName}\n                    onChange={this.handleNameChange}>\n                    </input>\n                    <Button primary disabled={!isEnabled} type=\"submit\"> Submit </Button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Playermanagement;","import React, { Component } from 'react';\nimport {H2} from \"./../StyledComponents/Headings\"\nimport {TH, TR, Table} from \"./../StyledComponents/Tables\"\n\n\nclass RecentGames extends Component {\n    render() {\n        this.props.games.sort((a, b) => new Date(b.props.date) - new Date(a.props.date))\n        return(\n            <div className= \"RecentGames\">\n                <H2>Recent Games</H2>\n                <Table>\n                    <tbody>\n                        <TR>\n                            <TH>Winner</TH>\n                            <TH>Elo Change</TH>\n                            <TH>Looser</TH>\n                            <TH>Elo Change</TH>\n                            <TH>Played on</TH>\n                            <TH>Delete</TH>\n                        </TR>\n                    {this.props.games}\n                    </tbody>\n                </Table>\n            </div>\n        )\n    }\n}\n\nexport default RecentGames","import React, { Component } from \"react\";\nimport \"./Player.css\";\nimport api from \"../../api\";\n\nclass Player extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            _id: \"\",\n            name: \"\",\n            elo: \"\",\n\n        }\n    }\n\n    componentDidMount() {\n        api.getPlayer(this.props._id)\n        .then(json => \n            {\n                json.map((player) => {\n                    this.setState({\n                    _id: player._id,\n                    name: player.name,\n                    elo: player.elo\n                    })\n                })\n            }\n        )\n    }\n\n    render() {\n        return(\n            <div className='Player'>\n                <span>{this.state.name}</span>\n            </div>\n        )\n    }\n}\n\nexport default Player;","import React, { Component } from \"react\";\nimport Player from \"./Player/Player\";\nimport { confirmAlert} from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport {Button} from \"./StyledComponents/Button\"\nimport {TH, TR, TD} from \"./StyledComponents/Tables\"\n\nclass Game extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            deleted: false,\n        }\n    }\n\n    delete = () => {\n        confirmAlert({\n            title: 'Confirm to submit',\n            message: 'Are you sure you want to delete this game?',\n            buttons: [\n              {\n                label: 'Yes',\n                onClick: () => this.onDelete()\n              },\n              {\n                label: 'No',\n              }\n            ]\n          });\n    }\n\n    onDelete(){\n        this.props.deleteGame(this.props._id)\n        this.setState({deleted:true})\n    }\n\n    render(){\n        var date = new Date(this.props.date).toLocaleString()\n        return(\n            <TR className='Game' >\n                <TD> <Player _id = {this.props.winner_id} /></TD>\n                <TD color='green'> +{this.props.winner_elo_change} </TD>\n                <TD> <Player _id = {this.props.loser_id} /> </TD>\n                <TD color='red'> {this.props.loser_elo_change}</TD>\n                <TD>{date}</TD>\n                <TD> <Button \n                onClick={this.delete.bind(this)} >\n                <i className=\"far fa-trash-alt\"></i> </Button></TD>\n            </TR>\n        )\n    }\n}\n\nexport default Game;","import React, { Component } from \"react\";\n\nimport Home from \"./Home\";\nimport Leaderboard from \"./Leaderboard/Leaderboard\";\nimport Addgame from \"./AddGame/Addgame\";\nimport Playermanagement from \"./PlayerManagement/Playermanagement\";\nimport RecentGames from \"./RecentGames/RecentGames\";\nimport Game from './Game'\nimport api from \"../api\";\nimport { confirmAlert } from 'react-confirm-alert';\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      players:[],\n      games:[],\n      gameAdded: false,\n      \n    };\n    this.deleteGame = this.deleteGame.bind(this);\n    this.onDeletePlayer = this.onDeletePlayer.bind(this);\n    this.deletePlayerPopUp = this.deletePlayerPopUp.bind(this);\n  };\n\n  componentDidMount(){\n    api.getPlayers()\n      .then( json => {\n        let players = json.map((player) => {\n          return(\n            {\n              id: player._id,\n              name: player.name,\n              elo: player.elo\n            }\n          )\n        })\n        this.setState({players: players})\n      })\n\n      api.getGames().then(\n        json => {\n            let games = json.map((game) => {\n                return(\n                    <Game \n                    key={game._id}\n                    _id={game._id}\n                    date={game.date}\n                    winner_id={game.winner_id} \n                    loser_id={game.loser_id} \n                    winner_elo_change={game.winner_elo_change} \n                    loser_elo_change={game.loser_elo_change}\n                    deleteGame = {this.deleteGame} \n                    />\n                )\n            })\n            this.setState({games: games})\n        }\n    )\n  }\n\n\n  deleteGame(_id) {\n    api.deleteGame(_id)\n    .then(data => {\n        var array = [...this.state.games]\n        array = array.filter((obj) => {\n            return obj.props._id !== _id\n        })\n        this.setState({\n            games: array,\n            deleted : true,\n        })\n        })\n    }\n\n  deletePlayerPopUp = (player_id) => {\n    confirmAlert({\n      title: 'Confirm to submit',\n        message: 'Are you sure you want to delete this player?',\n        buttons: [\n          {\n            label: 'Yes',\n            onClick: () => this.onDeletePlayer(player_id)\n          },\n          {\n            label: 'No',\n          }\n        ]\n    })\n}\n\nonDeletePlayer(player_id) {\n  api.deletePlayer(player_id)\n    .then(response => {\n        var array = [...this.state.players]\n        array = array.filter((obj) => {\n            return obj.id !== player_id\n        })\n        this.setState({\n            players: array,\n        })\n      })\n}\n\n    render() {\n      return(\n        <div>\n            <Home/>\n            <br />\n            <RecentGames games={this.state.games}/>\n            <Leaderboard players={this.state.players} delete = {this.deletePlayerPopUp}/>\n            <Addgame players = {this.state.players}/>\n            <Playermanagement/>\n        </div>\n      )\n    }\n}\n\nexport default Container;","import React, { Component } from 'react';\nimport './App.css';\n\nimport {Route, BrowserRouter} from \"react-router-dom\";\nimport Container from './components/Container';\n\nclass App extends Component {\n  \n\n  render() {\n    return(\n      <div className=\"app-container\">\n        <BrowserRouter>\n          <Route path='/' component={Container}\n            onEnter={() => {\n              document.getElementById(\"Home\").scrollIntoView();\n            }}\n          />\n          <Route path='/leaderboard' component={Container}\n           onEnter={() => {\n            document.getElementById(\"Leaderboard\").scrollIntoView();\n          }} />\n          <Route path='/recentgames' component={Container}\n           onEnter={() => {\n            document.getElementById(\"Recentgames\").scrollIntoView();\n          }} />\n          <Route path='/addgame' component={Container} \n           onEnter={() => {\n              document.getElementById(\"Addgame\").scrollIntoView();\n            }}/>\n          <Route path='/playermanagement' component={Container}\n           onEnter={() => {\n            document.getElementById(\"Addplayer\").scrollIntoView();\n          }} />\n        </BrowserRouter>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}