{"version":3,"sources":["components/Home.js","api.js","components/Leaderboard/Leaderboard.js","components/AddGame/Playerselector.js","components/AddGame/Addgame.js","components/PlayerManagement/Playermanagement.js","components/Player/Player.js","components/Game.js","components/RecentGames/RecentGames.js","components/Container.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","Component","api","fetch","method","then","response","json","id","name","data","headers","Accept","Content-Type","body","JSON","stringify","text","winner_id","loser_id","date","catch","error","console","Leaderboard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","delete","player_id","confirmAlert","title","message","buttons","label","onClick","onDelete","state","players","bind","assertThisInitialized","_this2","map","player","_id","elo","setState","_this3","array","toConsumableArray","filter","obj","_this4","sort","b","className","key","PlayerSelector","showMenu","closeMenu","handleSelect","event","preventDefault","document","addEventListener","dropdownWinner","contains","target","removeEventListener","player_name","onPlayerSelected","_this5","disabled","ref","element","Addgame","winner","loser","added","hasOwnProperty","window","location","reload","color","renderLoser","isEnabled","renderMessage","onSubmit","handleSubmit","Playerselector","type","Playermanagement","handleNameChange","playerName","value","length","canBeSubmitted","placeholder","onChange","Player","Game","deleted","deleteGame","Date","toLocaleString","components_Player_Player","winner_elo_change","loser_elo_change","RecentGames","games","game","components_Game","Container","components_Home","components_RecentGames_RecentGames","components_Leaderboard_Leaderboard","AddGame_Addgame","PlayerManagement_Playermanagement","App","react_router_dom","react_router","path","component","onEnter","getElementById","scrollIntoView","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.70f446da.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Home extends Component {\n    render() {\n        return(\n            <div>\n                 <h1>Home</h1>\n                    <p> Mini project for yousician employees to keep ping pong scores at work</p>\n            </div>\n        )\n    }\n}\n\nexport default Home;","\nexport default {\n\n    // Players API:\n    // Returns a list of players in JSON\n    getPlayers(){\n        let players = fetch('/api/players',\n            {method: 'GET'}).then((response) => response.json())\n        return players;\n    },\n\n    // Returns the player or 404\n    // Returned player data:\n    // {\n    // \t\"_id\": string,\n    // \t\"name\": string,\n    // \t\"elo\": int\n    // }\n    getPlayer(id){\n        let player = fetch('/api/players/' +id,\n            {method: 'GET'}).then((response) => response.json())\n        return player;\n    },\n\n    // Add player:\n    // [POST] /players\n    // Data: {\"name\": string}\n    // Returns: Added player\n    addPlayer(name){\n        var data = {\n            \"name\" : name,\n        }\n        let response = fetch('/api/players',\n            {\n                method: 'POST',\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type' : 'application/json'\n                },\n                body: JSON.stringify(data)\n            }).then((response => response.json()))\n        return response\n    },\n\n    // Delete player:\n    // [DELETE] /players/{id}\n    // Returns: 204 if success, 404 otherwise\n\n    deletePlayer(id){\n        let response = fetch('/api/players/' + id,\n            {method: \"DELETE\"}).then((response => response.text()))\n        return response\n    },\n    // Games API:\n\n    // Returns a list of games in JSON\n    getGames(){\n        let games = fetch('/api/games',\n            {method: 'GET'}).then((response) => response.json())\n        return games;\n    },\n\n    //Get game:\n    // [GET] /games/{id}\n    // Returns: Game or 404\n    // Returned game data:\n    // {\n    // \t\"_id\": string,\n    // \t\"date\": string, UTC-ISO\n    // \t\"winner_id\": string,\n    // \t\"loser_id\": string,\n    // \t\"winner_elo_change\": int,\n    // \t\"loser_elo_change\": int\n    // }\n\n    getGame(id){\n        let game = fetch('/api/games/' + id,\n            {method:'GET'}).then((response) => response.json())\n        return game\n    },\n\n    addGame(winner_id, loser_id, date){\n        var data = {\n            winner_id: winner_id,\n            loser_id: loser_id,\n        }\n        if (date) {\n            data.date = date;\n        }\n       let response = fetch('/api/games',\n            {\n                method: 'POST',\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type' : 'application/json'\n                },\n                body: JSON.stringify(data)\n            })\n            .then((response) => response.json())\n            .catch((error) => {\n                console.error(error);\n            });\n        return response\n    },\n\n    deleteGame(id){\n        let response = fetch('/api/games/' + id,\n            {method: \"DELETE\"}).then((response => response.text()))\n        return response\n    }\n}","import React, { Component } from 'react';\nimport api from \"../../api\"\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nclass Leaderboard extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            players:[],\n        };\n        this.onDelete = this.onDelete.bind(this)\n    }\n\n    componentDidMount() {\n        api.getPlayers()\n          .then( json => {\n            let players = json.map((player) => {\n              return(\n                {\n                  id: player._id,\n                  name: player.name,\n                  elo: player.elo\n                }\n              )\n            })\n            this.setState({players: players})\n          })\n      }\n\n    delete = (player_id) => {\n        confirmAlert({\n          title: 'Confirm to submit',\n            message: 'Are you sure you want to delete this player?',\n            buttons: [\n              {\n                label: 'Yes',\n                onClick: () => this.onDelete(player_id)\n              },\n              {\n                label: 'No',\n              }\n            ]\n        })\n    }\n\n    onDelete(player_id) {\n      api.deletePlayer(player_id)\n        .then(response => {\n            var array = [...this.state.players]\n            array = array.filter((obj) => {\n                return obj.id !== player_id\n            })\n            this.setState({\n                players: array,\n            })\n          })\n    }\n    \n    render() {\n        this.state.players.sort((a, b) => b.elo - a.elo)\n        return (\n        <div className = \"Leaderboard\">\n            <h2>Leaderboard</h2>\n            <table>\n              <tbody>\n                <tr>\n                  <th>Player</th>\n                  <th>ELO</th>\n                  <th>Delete</th>\n                </tr>\n                {this.state.players.map((player) => \n                <tr key={player.id}>\n                  <td>{player.name}</td>\n                  <td>{player.elo}</td>\n                  <td> <button onClick={this.delete.bind(this, player.id)} >Delete</button> </td>\n                </tr>\n                )\n              }\n              </tbody>\n            </table>\n        </div>\n    )\n    }\n}\n\nexport default Leaderboard;","import React, { Component } from \"react\";\n\nclass PlayerSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name : this.props.name ? this.props.name : \"Select Player\"\n        };\n\n        this.showMenu = this.showMenu.bind(this);\n        this.closeMenu = this.closeMenu.bind(this);\n        this.handleSelect = this.handleSelect.bind(this)    \n    }\n\n    showMenu(event) {\n        event.preventDefault();\n\n        this.setState({\n            showMenu: true\n        }, () => {\n            document.addEventListener('click', this.closeMenu);\n        })\n    }\n\n    closeMenu(event) {\n\n        if (!this.dropdownWinner.contains(event.target)){\n\n        this.setState({\n             showMenu: false,\n        }, () => {\n            document.removeEventListener('click', this.closeMenu);\n        })\n        }\n    }\n\n    handleSelect(player_id, player_name){\n        this.props.onPlayerSelected(player_id)\n        this.setState({\n            name : player_name,\n            showMenu : false,\n        } , () => {\n            document.removeEventListener('click', this.closeMenu);\n        })\n    }\n    \n    render() {\n        return(\n            <div>\n                <button onClick={this.showMenu} disabled={this.props.disabled}> {this.state.name} </button>    \n                {\n                    this.state.showMenu ? (\n                        <div className = \"menu\" ref={(element) => { this.dropdownWinner = element;}} >\n                            {this.props.players.map((player) => \n                                <button key={player.id} onClick={this.handleSelect.bind(this, player.id, player.name)} > {player.name} </button>\n                            )}\n                        </div>\n                    ) : ( null )\n                }\n            </div>\n        )\n    }\n}\n\nexport default PlayerSelector","import React, { Component } from \"react\";\nimport api from \"./../../api\"\nimport PlayerSelector from \"./Playerselector\"\n\nclass Addgame extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            players: [],\n            winner: null,\n            loser: null,\n            added: false,\n        };\n    }\n\n    componentDidMount() {\n        api.getPlayers()\n          .then( json => {\n            let players = json.map((player) => {\n              return(\n                {\n                  id: player._id,\n                  name: player.name,\n                  elo: player.elo\n                }\n              )\n            })\n            this.setState({players: players})\n          })\n        }\n\n    onPlayerSelected(player_id) {\n      if (this.state.winner == null) {\n        this.setState({\n          winner : player_id,\n        })\n      }\n      else {\n        this.setState({\n          loser: player_id,\n        })\n      }\n    }\n\n    handleSubmit(event) {\n      event.preventDefault();\n      api.addGame(this.state.winner, this.state.loser)\n      .then ( json => {\n        if (json.hasOwnProperty('_id')){\n          this.setState({\n            added:true,\n            winner: null,\n            loser: null,\n          })\n          window.location.reload()\n        }\n      })\n    } \n\n    renderMessage() {\n      if (!this.state.added) {\n        return (\n          <p color='black'> Add a game below: </p>\n        )\n      }\n      else {\n        return (\n          <p color='green'> Game Added successfully </p>\n        )\n      }\n    }\n\n    render() {\n      const renderLoser = this.state.winner != null;\n      const isEnabled = this.state.winner != null && this.state.loser != null\n\n        return(\n            <div>\n                <h2> Add Game </h2>\n                {this.renderMessage()}\n                <form onSubmit={this.handleSubmit.bind(this)}>\n                  <PlayerSelector \n                    players= {this.state.players} \n                    name=\"Select Winning Player\" \n                    onPlayerSelected={this.onPlayerSelected.bind(this)}\n                    disabled={false} />\n                  \n                  <PlayerSelector \n                    players={this.state.players} \n                    name=\"Select Losing Player\" \n                    onPlayerSelected={this.onPlayerSelected.bind(this)}\n                    disabled={!renderLoser} />\n                  \n                  <button disabled={!isEnabled} type=\"submit\">Submit Game</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Addgame;","import React, { Component } from \"react\";\nimport api from \"../../api\";\n\nclass Playermanagement extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            playerName : \"\",\n            added : false,\n        }\n        this.onSubmit = this.onSubmit.bind(this)\n        this.handleNameChange = this.handleNameChange.bind(this)\n    }\n\n    onSubmit(event){\n        event.preventDefault();\n        api.addPlayer(this.state.playerName)\n        .then ( json => {\n            if (json.hasOwnProperty('_id')){\n              this.setState({\n                added:true,\n                playerName : \"\"\n              })\n              window.location.reload()\n            }\n          })\n    }\n\n    handleNameChange = event => {\n        this.setState({playerName: event.target.value})\n    }\n\n    canBeSubmitted() {\n        return this.state.playerName.length > 0\n    }\n\n    render() {\n        const isEnabled = this.canBeSubmitted()\n        return(\n            <div>\n                <h2> Add Player </h2>\n                <form onSubmit = {this.onSubmit}>\n                    <input \n                    placeholder=\"Player name\"\n                    type=\"text\"\n                    value={this.state.playerName}\n                    onChange={this.handleNameChange}>\n                    </input>\n                    <button disabled={!isEnabled} type=\"submit\"> Submit </button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Playermanagement;","import React, { Component } from \"react\";\nimport \"./Player.css\";\nimport api from \"../../api\";\n\nclass Player extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            _id: \"\",\n            name: \"\",\n            elo: \"\",\n\n        }\n    }\n\n    componentDidMount() {\n        api.getPlayer(this.props._id)\n        .then(json => \n            {\n                json.map((player) => {\n                    this.setState({\n                    _id: player._id,\n                    name: player.name,\n                    elo: player.elo\n                    })\n                })\n            }\n        )\n    }\n\n    render() {\n        return(\n            <div className='Player'>\n                <span>{this.state.name}</span>\n            </div>\n        )\n    }\n}\n\nexport default Player;","import React, { Component } from \"react\";\nimport Player from \"./Player/Player\";\nimport { confirmAlert} from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nclass Game extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            deleted: false,\n        }\n    }\n\n    delete = () => {\n        confirmAlert({\n            title: 'Confirm to submit',\n            message: 'Are you sure you want to delete this game?',\n            buttons: [\n              {\n                label: 'Yes',\n                onClick: () => this.onDelete()\n              },\n              {\n                label: 'No',\n              }\n            ]\n          });\n    }\n\n    onDelete(){\n        this.props.deleteGame(this.props._id)\n        this.setState({deleted:true})\n    }\n\n    render(){\n        var date = new Date(this.props.date).toLocaleString()\n        return(\n            <tr className='Game' >\n                <td> <Player _id = {this.props.winner_id} /></td>\n                <td color='green'> +{this.props.winner_elo_change} </td>\n                <td> <Player _id = {this.props.loser_id} /> </td>\n                <td color='red'> {this.props.loser_elo_change}</td>\n                <td>{date}</td>\n                <td> <button \n                onClick={this.delete.bind(this)} >\n                Delete </button></td>\n            </tr>\n        )\n    }\n}\n\nexport default Game;","import React, { Component } from 'react';\nimport api from \"./../../api\"\nimport Game from \"./../Game\"\n\nclass RecentGames extends Component {\n    constructor(props){\n        super(props);      \n        this.state = {\n            games:[],\n            deleted: false,\n        }\n        this.deleteGame = this.deleteGame.bind(this)\n    }\n\n    componentDidMount() {\n        api.getGames().then(\n            json => {\n                let games = json.map((game) => {\n                    return(\n                        <Game \n                        key={game._id}\n                        _id={game._id}\n                        date={game.date}\n                        winner_id={game.winner_id} \n                        loser_id={game.loser_id} \n                        winner_elo_change={game.winner_elo_change} \n                        loser_elo_change={game.loser_elo_change}\n                        deleteGame = {this.deleteGame} \n                        />\n                    )\n                })\n                this.setState({games: games})\n            }\n        )\n    }\n\n    deleteGame(_id) {\n        api.deleteGame(_id)\n        .then(data => {\n            var array = [...this.state.games]\n            array = array.filter((obj) => {\n                return obj.props._id !== _id\n            })\n            this.setState({\n                games: array,\n                deleted : true,\n            })\n            })\n        }\n\n    render() {\n        this.state.games.sort((a, b) => new Date(b.props.date) - new Date(a.props.date))\n        return(\n            <div className= \"RecentGames\">\n                <h2>Recent Games</h2>\n                <table>\n                    <tbody>\n                        <tr>\n                            <th>Winner</th>\n                            <th>Elo Change</th>\n                            <th>Looser</th>\n                            <th>Elo Change</th>\n                            <th>Played on</th>\n                            <th>Delete</th>\n                        </tr>\n                    {this.state.games}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default RecentGames","import React, { Component } from \"react\";\n\nimport Home from \"./Home\";\nimport Leaderboard from \"./Leaderboard/Leaderboard\";\nimport Addgame from \"./AddGame/Addgame\";\nimport Playermanagement from \"./PlayerManagement/Playermanagement\";\nimport RecentGames from \"./RecentGames/RecentGames\";\n\nclass Container extends Component {\n\n    render() {\n      return(\n        <div>\n            <Home/>\n            <br />\n            <RecentGames/>\n            <br />\n            <Leaderboard/>\n            <br />\n            <Addgame/>\n            <br />\n            <Playermanagement/>\n        </div>\n      )\n    }\n}\n\nexport default Container;","import React, { Component } from 'react';\nimport './App.css';\n\nimport {Route, BrowserRouter} from \"react-router-dom\";\nimport Container from './components/Container';\n\nclass App extends Component {\n  \n\n  render() {\n    return(\n      <div className=\"app-container\">\n      <h1> For The Serve </h1>\n        <BrowserRouter>\n          <Route path='/' component={Container}\n            onEnter={() => {\n              document.getElementById(\"home_id\").scrollIntoView();\n            }}\n          />\n          <Route path='/leaderboard' component={Container}\n           onEnter={() => {\n            document.getElementById(\"leaderboard_id\").scrollIntoView();\n          }} />\n          <Route path='/recentgames' component={Container}\n           onEnter={() => {\n            document.getElementById(\"recent_games\").scrollIntoView();\n          }} />\n          <Route path='/addgame' component={Container} \n           onEnter={() => {\n              document.getElementById(\"addgame_id\").scrollIntoView();\n            }}/>\n          <Route path='/playermanagement' component={Container}\n           onEnter={() => {\n            document.getElementById(\"playermanagement_id\").scrollIntoView();\n          }} />\n        </BrowserRouter>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}