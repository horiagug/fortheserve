{"version":3,"sources":["components/styledcomponents/Banner.js","components/styledcomponents/Headings.js","components/styledcomponents/Button.js","components/home.js","components/styledcomponents/Tables.js","api.js","components/leaderboard/Leaderboard.js","components/styledcomponents/Form.js","components/addplayer/Playermanagement.js","components/game.js","components/recentgames/RecentGames.js","components/addgame/selectplayers.js","components/styledcomponents/AddGames.js","components/addgame/addgames.js","components/addgame/formcontent.js","components/pages/index.js","components/pages/admin.js","App.js","serviceWorker.js","index.js"],"names":["Banner","styled","div","_templateObject","P","p","_templateObject2","CTA","_templateObject3","H1","h1","Headings_templateObject","props","dark","H2","h2","Headings_templateObject2","Button","button","Button_templateObject","primary","Home","react_default","a","createElement","onClick","this","openModal","Component","API_URL","TH","th","Tables_templateObject","Table","table","Tables_templateObject2","TR","tr","Tables_templateObject3","TD","td","_templateObject4","Leaderboard","_this","players","sort","b","elo","className","isAdmin","map","player","key","id","name","delete","api","fetch","method","then","response","json","data","headers","Accept","Content-Type","body","JSON","stringify","text","winner_id","loser_id","date","catch","error","console","Form","form","Form_templateObject","Input","input","Form_templateObject2","Playermanagement","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleNameChange","event","setState","playerName","target","value","state","added","onSubmit","bind","assertThisInitialized","_this2","preventDefault","hasOwnProperty","window","location","reload","length","isEnabled","canBeSubmitted","placeholder","type","onChange","disabled","Game","confirmAlert","title","message","buttons","label","onDelete","deleted","winner","loser","deleteGame","_id","i","style","color","winner_elo_change","loser_elo_change","RecentGames","games","game","components_game","SelectPlayers","currentStep","selectedPlayers","Scores","AddGames_templateObject","Player","AddGames_templateObject2","AddGames","player1_score","addGame","player2_score","removeGameButton","FormContent","handleSelection","addOrRemovePlayer","removeGame","addGameToList","_next","_prev","newArray","newPlayer","isFull","alreadyExists","splice","push","player_id","player_name","slice","score","_this3","alert","pop","Fragment","selectplayers","addgames","previousButton","nextButton","Modal","setAppElement","Container","deletePlayerPopUp","onDeletePlayer","showModalHandler","showModal","hideModalHandler","gameAdded","modalIsOpen","afterOpenModal","closeModal","array","toConsumableArray","filter","obj","_this4","home","react_modal_lib_default","isOpen","onAfterOpen","onRequestClose","contentLabel","formcontent","leaderboard_Leaderboard","recentgames_RecentGames","addplayer_Playermanagement","Admin","App","react_router","path","component","Index","Boolean","hostname","match","ReactDOM","render","react_router_dom","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f23f6a97.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst Banner = styled.div`\n    color: white;\n    background: url(https://images.unsplash.com/photo-1511067007398-7e4b90cfa4bc?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1049&q=80);\n    background-size: cover;\n    background-position: center; \n    height: 30rem;\n    display: flex;  \n    flex-flow: row wrap;\n   align-content: center;\n`;\n\nconst P = styled.p`\nmargin: auto;\nline-height: 1.5;\ncolor: #fff;\nfont-size: 1.2rem;\ntext-align: center;\nflex: 1 100%;\nfont-weight: 500;\n`;\n\nconst CTA = styled.div`\nflex: 1 100%;\ntext-align: center;\n`;\n\nexport {Banner, P, CTA}","import React from 'react'\nimport styled from 'styled-components'\n\nconst H1 = styled.h1`\n    margin: auto;\n    text-transform: uppercase;\n    line-height: 1;\n    font-size: 3.75rem;\n    font-weight: 900;\n    color: ${props => props.dark ? \"#000\" : \"#fff\"}\n    text-align: center;\n    flex: 1 100%;\n`;\n\nconst H2 = styled.h2`\n    margin: 20px, auto;\n    text-transform: uppercase;\n    line-height: 1;\n    font-size:2 rem;\n    font-weight: 600;\n    text-align: center;\n    flex: 1 100%`;\n\nexport {H1, H2}","import React from 'react'\nimport styled from 'styled-components'\n\nconst Button = styled.button`\n  background: ${props => props.primary ? \"#6fc13e\" : \"#0002\"};\n  \n  color: white;\n  font-size: 1em;\n  text-transform: uppercase;\n  font-weight: 700;\n  letter-spacing: 0.5px;\n  text-align: center;\n\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: ${props => props.primary? \"2px solid transparent\" : \"2px solid white\"};\n  border-radius : 100px;\n  transition: background 0.5s;\n\n  :hover {\n      background: ${props => props.primary ? \"#1c880d\" : \"white\"}\n      color: ${props => props.primary ? \"white\" : \"black\"};\n  }\n`;\n\nexport {Button}","import React, { Component } from \"react\";\nimport {Banner,P, CTA} from \"./styledcomponents/Banner\";\nimport { H1 } from \"./styledcomponents/Headings\";\nimport {Button} from \"./styledcomponents/Button\";\n\nclass Home extends Component {\n    render() { \n        return(\n            <Banner>\n                 <H1>For The Serve</H1>\n                    <P> Ping pong game score keeping app.</P>\n                    <CTA>\n                        <Button primary onClick={this.props.openModal}> Add A Game </Button>\n                    </CTA>\n            </Banner>\n            \n        )\n    }\n}\n\nexport default Home;","import React from 'react'\nimport styled from 'styled-components'\n\nconst TH = styled.th`\n   background: #f0f0f0;\n   margin: auto;\n   width:13%\n   text-align: center;\n\n`;\n\nconst Table= styled.table`\n   margin: auto;\n   width: 75%\n`;\n\nconst TR = styled.tr`\n   height: 2.5rem;\n`;\n\nconst TD = styled.td`\n   text-align: center;\n   border-bottom: 2px dashed rgba(192, 192, 192, .3);\n`;\n\nexport {TH, TR, TD, Table}","\nlet API_URL \nprocess.env.REACT_APP_STAGE === 'dev'\n  ? API_URL = ''\n  : API_URL = 'https://fortheserve.herokuapp.com'\n\n\nexport default {\n\n    // Players API:\n    // Returns a list of players in JSON\n    getPlayers(){\n        let players = fetch(API_URL + '/api/players',\n            {method: 'GET'}).then((response) => response.json())\n        return players;\n    },\n\n    // Returns the player or 404\n    // Returned player data:\n    // {\n    // \t\"_id\": string,\n    // \t\"name\": string,\n    // \t\"elo\": int\n    // }\n    getPlayer(id){\n        let player = fetch(API_URL +'/api/players/' +id,\n            {method: 'GET'}).then((response) => response.json())\n        return player;\n    },\n\n    // Add player:\n    // [POST] /players\n    // Data: {\"name\": string}\n    // Returns: Added player\n    addPlayer(name){\n        var data = {\n            \"name\" : name,\n        }\n        let response = fetch(API_URL +'/api/players',\n            {\n                method: 'POST',\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type' : 'application/json'\n                },\n                body: JSON.stringify(data)\n            }).then((response => response.json()))\n        return response\n    },\n\n    // Delete player:\n    // [DELETE] /players/{id}\n    // Returns: 204 if success, 404 otherwise\n\n    deletePlayer(id){\n        let response = fetch(API_URL +'/api/players/' + id,\n            {method: \"DELETE\"}).then((response => response.text()))\n        return response\n    },\n    // Games API:\n\n    // Returns a list of games in JSON\n    getGames(){\n        let games = fetch(API_URL +'/api/games',\n            {method: 'GET'}).then((response) => response.json())\n        return games;\n    },\n\n    //Get game:\n    // [GET] /games/{id}\n    // Returns: Game or 404\n    // Returned game data:\n    // {\n    // \t\"_id\": string,\n    // \t\"date\": string, UTC-ISO\n    // \t\"winner_id\": string,\n    // \t\"loser_id\": string,\n    // \t\"winner_elo_change\": int,\n    // \t\"loser_elo_change\": int\n    // }\n\n    getGame(id){\n        let game = fetch(API_URL +'/api/games/' + id,\n            {method:'GET'}).then((response) => response.json())\n        return game\n    },\n\n    addGame(winner_id, loser_id, date){\n        var data = {\n            winner_id: winner_id,\n            loser_id: loser_id,\n        }\n        if (date) {\n            data.date = date;\n        }\n       let response = fetch(API_URL +'/api/games',\n            {\n                method: 'POST',\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type' : 'application/json'\n                },\n                body: JSON.stringify(data)\n            })\n            .then((response) => response.json())\n            .catch((error) => {\n                console.error(error);\n            });\n        return response\n    },\n\n    deleteGame(id){\n        let response = fetch(API_URL +'/api/games/' + id,\n            {method: \"DELETE\"}).then((response => response.text()))\n        return response\n    }\n}","import React, { Component } from 'react';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport {Button} from \"../styledcomponents/Button\"\nimport {H2} from \"../styledcomponents/Headings\"\nimport {TH, TR,TD, Table} from \"../styledcomponents/Tables\"\n\nclass Leaderboard extends Component {\n\n    render() {\n        this.props.players.sort((a, b) => b.elo - a.elo)\n        return (\n        <div className = \"Leaderboard\">\n            <H2>Leaderboard</H2>\n            <Table>\n              <tbody>\n                <TR>\n                  <TH>Player</TH>\n                  <TH>ELO</TH>\n                  {this.props.isAdmin &&\n                   <TH>Delete</TH>\n                  }\n                </TR>\n                {this.props.players.map((player) => \n                <TR key={player.id}>\n                  <TD>{player.name}</TD>\n                  <TD>{player.elo}</TD>\n                  {this.props.isAdmin &&\n                  <TD> <Button onClick={() => { this.props.delete(player.id) }} ><i className=\"far fa-trash-alt\"></i></Button> </TD>\n                  }\n                </TR>\n                )\n              }\n              </tbody>\n            </Table>\n        </div>\n    )\n    }\n}\n\nexport default Leaderboard;","import React from 'react'\nimport styled from 'styled-components'\n\nconst Form = styled.form`\n    margin:auto;\n    display: flex;\n    flex-flow: row wrap;\n    align-items: center;\n    justify-content: center;\n`;\nconst Input = styled.input`\ntext-align: center;\nmargin: 2px, auto;\nwidth:30%;\nheight:1.5rem;\n`;\n\nexport {Form, Input}","import React, { Component } from \"react\";\nimport api from \"../../api\";\nimport {H2} from \"../styledcomponents/Headings\"\nimport {Button} from \"../styledcomponents/Button\"\nimport {Form, Input} from \"../styledcomponents/Form\"\n\nclass Playermanagement extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            playerName : \"\",\n            added : false,\n        }\n        this.onSubmit = this.onSubmit.bind(this)\n        this.handleNameChange = this.handleNameChange.bind(this)\n    }\n\n    onSubmit(event){\n        event.preventDefault();\n        api.addPlayer(this.state.playerName)\n        .then ( json => {\n            if (json.hasOwnProperty('_id')){\n              this.setState({\n                added:true,\n                playerName : \"\"\n              })\n              window.location.reload()\n            }\n          })\n    }\n\n    handleNameChange = event => {\n        this.setState({playerName: event.target.value})\n    }\n\n    canBeSubmitted() {\n        return this.state.playerName.length > 0\n    }\n\n    render() {\n        const isEnabled = this.canBeSubmitted()\n        return(\n            <div>\n                <H2> Add Player </H2>\n                <Form onSubmit = {this.onSubmit}>\n                    <Input \n                    placeholder=\"Player name\"\n                    type=\"text\"\n                    value={this.state.playerName}\n                    onChange={this.handleNameChange}>\n                    </Input>\n                    <Button primary disabled={!isEnabled} type=\"submit\"> Submit </Button>\n                </Form>\n            </div>\n        )\n    }\n}\n\nexport default Playermanagement;","import React, { Component } from \"react\";\nimport { confirmAlert} from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport {Button} from \"./styledcomponents/Button\"\nimport { TR, TD} from \"./styledcomponents/Tables\"\n\nclass Game extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            deleted: false,\n            winner: null,\n            loser: null,\n        }\n    }\n\n    delete = () => {\n        confirmAlert({\n            title: 'Confirm to submit',\n            message: 'Are you sure you want to delete this game?',\n            buttons: [\n              {\n                label: 'Yes',\n                onClick: () => this.onDelete()\n              },\n              {\n                label: 'No',\n              }\n            ]\n          });\n    }\n\n    onDelete(){\n        this.props.deleteGame(this.props._id)\n        this.setState({deleted:true})\n    }\n\n    componentDidMount(){\n      var winner;\n      var loser;\n      for (var i = 0; i<this.props.players.length; i++){\n        if(this.props.players[i].id === this.props.winner_id){\n          winner =\n            <div className='Player'>\n              <span>{this.props.players[i].name}</span> \n            </div>\n        }\n        if(this.props.players[i].id === this.props.loser_id){\n          loser =\n            <div className='Player'>\n              <span>{this.props.players[i].name}</span> \n            </div>\n        }\n          this.setState({\n            winner : winner,\n            loser : loser\n          })\n      }\n    }\n\n    render(){\n      const winnerColor = {\n        color : \"green\"\n     }\n     const looserColor = {\n      color : \"red\"\n   }\n        return(\n            <TR className='Game' >\n                <TD> {this.state.winner}</TD>\n                <TD  style={winnerColor}> +{this.props.winner_elo_change} </TD>\n                <TD>{this.state.loser} </TD>\n                <TD style={looserColor}> {this.props.loser_elo_change}</TD>\n                {this.props.isAdmin &&\n                <TD> <Button \n                onClick={this.delete.bind(this)} >\n                <i className=\"far fa-trash-alt\"></i> </Button></TD>\n                }\n           </TR>\n        )\n    }\n}\n\nexport default Game;","import React, { Component } from 'react';\nimport {H2} from \"../styledcomponents/Headings\"\nimport {TH, TR, Table} from \"../styledcomponents/Tables\"\nimport Game from \"./../game\"\n\n\nclass RecentGames extends Component {\n    render() {\n        return(\n            <div className= \"RecentGames\">\n                <H2>Recent Games</H2>\n                <Table>\n                    <tbody>\n                        <TR>\n                            <TH>Winner</TH>\n                            <TH>Elo Change</TH>\n                            <TH>Looser</TH>\n                            <TH id=\"loser_elo\" >Elo Change</TH>\n                            {this.props.isAdmin &&\n                            <TH>Delete</TH>\n                            }\n                        </TR>\n                   {\n            this.props.games.map((game) => (\n              <Game\n              key={game._id}\n              _id={game._id}\n              winner_id={game.winner_id} \n              loser_id={game.loser_id} \n              winner_elo_change={game.winner_elo_change} \n              loser_elo_change={game.loser_elo_change}\n              deleteGame = {game.deleteGame} \n              isAdmin = {this.props.isAdmin}\n              players = {this.props.players}\n              />\n            ))\n          }\n                    </tbody>\n                </Table>\n            </div>\n        )\n    }\n}\n\nexport default RecentGames","import React, { Component } from \"react\";\nimport {Button} from \"./../styledcomponents/Button\";\nimport {H2} from \"./../styledcomponents/Headings\";\n\nclass SelectPlayers extends Component {\n    render() {\n      if (this.props.currentStep !== 1) { // Prop: The current step\n        return null\n      }\n      // The markup for the Step 1 UI\n      return(\n        <div>\n          <H2>Select Players</H2>\n          {\n            this.props.players.map((player) => (\n              <Button key={player.id} onClick={() => { this.props.onClick(player.id, player.name) }}>{player.name}</Button>\n            ))\n          }\n          <H2>Selected Players</H2>\n          {\n            this.props.selectedPlayers.map((player) => (\n              <Button key={player.id} onClick={() => { this.props.onClick(player.id, player.name) }}>{player.name}</Button>\n            ))\n          }\n        </div>\n      )\n    }\n  }\n\n  export default SelectPlayers","import React from 'react'\nimport styled from 'styled-components'\n\nconst Scores = styled.div`\n    display: flex;  \n    flex-flow: row wrap;\n   align-content: center;\n`;\n\nconst Player = styled.div`\nflex: 1 50%;\ntext-align: center;\n`;\n\nexport {Scores, Player}","import React, { Component } from \"react\";\nimport {Button} from \"./../styledcomponents/Button\";\nimport {H2} from \"./../styledcomponents/Headings\";\nimport {Scores, Player} from \"./../styledcomponents/AddGames\";\n\nclass AddGames extends Component {\n    render() {\n      if (this.props.currentStep !== 2) { // Prop: The current step\n        return null\n      }\n      return(\n        <div>\n          <H2>Score</H2>\n          <div>\n              <Scores>\n              <Player>\n                <H2>{this.props.selectedPlayers[0].name} </H2>\n                <H2>{this.props.player1_score} </H2>\n                <Button primary onClick={() =>{this.props.addGame(this.props.selectedPlayers[0].id, this.props.selectedPlayers[1].id)}}>Add</Button>\n              </Player>\n              <Player>\n                <H2>{this.props.selectedPlayers[1].name} </H2>\n                <H2>{this.props.player2_score} </H2>\n                <Button primary onClick={() =>{this.props.addGame(this.props.selectedPlayers[1].id, this.props.selectedPlayers[0].id)}}>Add</Button>\n              </Player>\n              </Scores>\n              {this.removeGameButton}\n          </ div>\n        </div>\n      )\n    }\n  }\n  \n  export default AddGames","import React, { Component } from \"react\";\nimport {H1} from './../styledcomponents/Headings'\nimport {Button} from './../styledcomponents/Button'\nimport SelectPlayers from './selectplayers'\nimport AddGames from './addgames'\nimport api from './../../api'\n\n\nclass FormContent extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      currentStep: 1,\n      players: [],\n      player1_score : 0,\n      player2_score: 0,\n      games: [],\n    }\n    this.handleSelection = this.handleSelection.bind(this)\n    this.addOrRemovePlayer = this.addOrRemovePlayer.bind(this)\n    this.addGame = this.addGame.bind(this)\n    this.removeGame = this.removeGame.bind(this)\n    this.addGameToList = this.addGameToList.bind(this)\n    this._next = this._next.bind(this)\n    this._prev = this._prev.bind(this)\n  }\n  \n  _next() {\n      let currentStep = this.state.currentStep\n      currentStep = currentStep >= 1 ? 2: currentStep + 1\n      this.setState({\n        currentStep: currentStep\n      })\n    }\n      \n    _prev() {\n      let currentStep = this.state.currentStep\n      currentStep = currentStep <= 1? 1: currentStep - 1\n      this.setState({\n        currentStep: currentStep\n      })\n    }\n\n    get previousButton(){\n      let currentStep = this.state.currentStep;\n      if(currentStep !==1){\n        return (\n          <Button  onClick={this._prev}> Previous </Button>\n        )\n      }\n      return null;\n    }\n    \n    get nextButton(){\n      let currentStep = this.state.currentStep;\n      if(currentStep <2 && this.state.players.length === 2){\n        return (\n          <Button  primary  onClick={this._next}> Next  </Button>        \n        )\n      }\n      return null;\n    }\n\n    get removeGameButton(){\n      let currentStep = this.state.currentStep;\n      if(currentStep === 2){\n        if(this.state.player1_score !==0 || this.state.player2_score !==0){\n            return (\n                <Button onClick={this.removeGame}> Remove Game  </Button>\n              )\n        }\n    }\n      return null;\n  }\n\n    // get finishButton(){\n    //   let currentStep = this.state.currentStep;\n    //   // If the current step is not 2, then render the \"next\" button\n    //   if(currentStep === 2 && ){\n    //     return (\n    //       <Button  primary  onClick={this._next}> Next  </Button>        \n    //     )\n    //   }\n    //   // ...else render nothing\n    //   return null;\n    // }\n\n    addOrRemovePlayer(newArray, newPlayer, isFull){\n      var alreadyExists = -1; //treating -1 as false here\n      for (var i = 0; i < newArray.length; i++){\n        if(newArray[i].id === newPlayer.id ){\n          alreadyExists = i;\n        }\n      }\n      if (alreadyExists !== -1){\n        newArray.splice(alreadyExists, 1)\n      }\n      else if (!isFull){\n        newArray.push(newPlayer)\n      }\n      return newArray\n    }\n\n    addGameToList(newArray, id, player){\n      let game = {\n        id : id,\n        winner: player,\n      }\n      newArray.push(game)\n      return newArray\n    }\n\n  handleSelection(player_id, player_name) {\n    var newArray = this.state.players.slice();\n    var newPlayer = {\n      name : player_name,\n      id : player_id\n    }\n    if (newArray.length ===0 ){\n      newArray.push(newPlayer)\n    }\n    else if (newArray.length === 2) {\n      newArray = this.addOrRemovePlayer(newArray, newPlayer, true)\n    }\n  else {\n    newArray = this.addOrRemovePlayer(newArray, newPlayer, false)\n  }\n    this.setState({players: newArray})\n  }\n\n  addGame(winner_id, loser_id) {\n    api.addGame(winner_id, loser_id)\n    .then ( json => {\n      if (json.hasOwnProperty('_id')){\n        var newArray = this.state.games.slice();\n        if (winner_id === this.state.players[0].id){\n          let score = this.state.player1_score + 1;\n          newArray = this.addGameToList(newArray, json._id, \"player_1\" )\n          this.setState({\n            player1_score : score,\n            games: newArray,\n          })\n        }\n        else {\n          let score = this.state.player2_score + 1;\n          newArray = this.addGameToList(newArray, json._id, \"player_2\" )\n          this.setState({\n            player2_score : score,\n            games: newArray,\n          })\n        }\n      }\n    })\n  }\n\n  removeGame(){\n    if(this.state.games.length === 0){\n      alert(\"Something went wrong\")\n    }\n    else{\n      var newArray = this.state.games.slice();\n      var game = newArray.pop()\n      api.deleteGame(game.id)\n       .then(data => {\n         if (game.winner === \"player_1\"){\n          let player1_score = this.state.player1_score -1;\n          this.setState({\n            games: newArray,\n            player1_score : player1_score\n          })\n        }\n        else {\n          let player2_score = this.state.player2_score -1;\n          this.setState({\n            games: newArray,\n            player2_score : player2_score \n          })\n        }\n          })\n    }\n  }\n\nrender() {\n    return (\n      <React.Fragment>\n        <H1 dark>Add games</H1>\n           \n            {/* Step 1 */}\n            <SelectPlayers \n            currentStep={this.state.currentStep} \n            onClick={this.handleSelection}\n            players = {this.props.players}\n            selectedPlayers = {this.state.players}\n            />\n\n            {/* Step 2 */}\n            <AddGames\n            currentStep={this.state.currentStep}\n            selectedPlayers = {this.state.players}\n            player1_score = {this.state.player1_score}\n            player2_score = {this.state.player2_score}\n            addGame = {this.addGame}\n            removeGame={this.removeGame}\n            />\n            {this.previousButton}\n            {this.nextButton}\n            {this.removeGameButton}\n      </React.Fragment>\n    )\n}\n}\nexport default FormContent","import React, { Component } from \"react\";\n\nimport Home from \"../home\";\nimport Leaderboard from \"../leaderboard/Leaderboard\";\nimport Playermanagement from \"../addplayer/Playermanagement\";\nimport RecentGames from \"../recentgames/RecentGames\";\nimport api from \"../../api\";\nimport { confirmAlert } from 'react-confirm-alert';\nimport FormContent from \"./../addgame/formcontent\"\nimport Modal from 'react-modal'\n\nModal.setAppElement('#root')\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      players:[],\n      games:[],\n      gameAdded: false,\n      showModal : false,\n      modalIsOpen: false,\n    };\n    this.deleteGame = this.deleteGame.bind(this);\n    this.onDeletePlayer = this.onDeletePlayer.bind(this);\n    this.deletePlayerPopUp = this.deletePlayerPopUp.bind(this);\n    this.openModal = this.openModal.bind(this);\n    this.afterOpenModal = this.afterOpenModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  };\n\n  componentDidMount(){\n    api.getPlayers()\n      .then( json => {\n        let players = json.map((player) => {\n          return(\n            {\n              id: player._id,\n              name: player.name,\n              elo: player.elo\n            }\n          )\n        })\n        this.setState({players: players})\n      })\n\n      api.getGames().then(\n        json => {\n            let games = json.map((game) => {\n                return(\n                    {\n                    key: game._id,\n                    _id :game._id,\n                    winner_id: game.winner_id,\n                    loser_id: game.loser_id,\n                    winner_elo_change: game.winner_elo_change,\n                    loser_elo_change: game.loser_elo_change,\n                    deleteGame : this.deleteGame,\n                    isAdmin : false,\n                    }\n                )\n            })\n            this.setState({games: games})\n        }\n    )\n  }\n\n\n  deleteGame(_id) {\n    api.deleteGame(_id)\n    .then(data => {\n        var array = [...this.state.games]\n        array = array.filter((obj) => {\n            return obj.props._id !== _id\n        })\n        this.setState({\n            games: array,\n            deleted : true,\n        })\n        })\n    }\n\n  deletePlayerPopUp = (player_id) => {\n    confirmAlert({\n      title: 'Confirm to submit',\n        message: 'Are you sure you want to delete this player?',\n        buttons: [\n          {\n            label: 'Yes',\n            onClick: () => this.onDeletePlayer(player_id)\n          },\n          {\n            label: 'No',\n          }\n        ]\n    })\n}\n\nonDeletePlayer(player_id) {\n  api.deletePlayer(player_id)\n    .then(response => {\n        var array = [...this.state.players]\n        array = array.filter((obj) => {\n            return obj.id !== player_id\n        })\n        this.setState({\n            players: array,\n        })\n      })\n}\n\nshowModalHandler = (event) =>{\n  this.setState({showModal:true});\n}\n\nhideModalHandler = (event) =>{\n  this.setState({showModal:false});\n}\n\nopenModal() {\n  this.setState({modalIsOpen: true});\n}\n\nafterOpenModal() {\n  // references are now sync'd and can be accessed. \n}\n\ncloseModal() {\n  this.setState({modalIsOpen: false});\n}\n\n    render() {\n      return(\n        <div>\n            <Home  openModal={this.openModal}/>\n            <br />\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onAfterOpen={this.afterOpenModal}\n          onRequestClose={this.closeModal}\n          contentLabel=\"Example Modal\"\n        >\n       <FormContent players = {this.state.players}></FormContent>\n        </Modal>\n            <Leaderboard players={this.state.players} delete = {this.deletePlayerPopUp} />\n            <br></br>\n            <hr></hr>\n            <RecentGames games={this.state.games} players = {this.state.players} isAdmin={false} />\n            <br></br>\n            <hr></hr>\n            <Playermanagement/>\n        </div>\n      )\n    }\n}\n\nexport default Container;","import React, { Component } from \"react\";\n\nimport Leaderboard from \"../leaderboard/Leaderboard\";\nimport RecentGames from \"../recentgames/RecentGames\";\nimport api from \"../../api\";\nimport { confirmAlert } from 'react-confirm-alert';\n\nclass Admin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      players:[],\n      games:[],\n      gameAdded: false,\n      \n    };\n    this.deleteGame = this.deleteGame.bind(this);\n    this.onDeletePlayer = this.onDeletePlayer.bind(this);\n    this.deletePlayerPopUp = this.deletePlayerPopUp.bind(this);\n  };\n\n  componentDidMount(){\n    api.getPlayers()\n      .then( json => {\n        let players = json.map((player) => {\n          return(\n            {\n              id: player._id,\n              name: player.name,\n              elo: player.elo\n            }\n          )\n        })\n        this.setState({players: players})\n      })\n\n      api.getGames().then(\n        json => {\n          let games = json.map((game) => {\n              return(\n                  {\n                  key: game._id,\n                  _id :game._id,\n                  winner_id: game.winner_id,\n                  loser_id: game.loser_id,\n                  winner_elo_change: game.winner_elo_change,\n                  loser_elo_change: game.loser_elo_change,\n                  deleteGame : this.deleteGame,\n                  isAdmin : false,\n                  }\n              )\n          })\n          this.setState({games: games})\n      }\n    )\n  }\n\n\n  deleteGame(_id) {\n    api.deleteGame(_id)\n    .then(data => {\n        var array = [...this.state.games]\n        array = array.filter((obj) => {\n            return obj.props._id !== _id\n        })\n        this.setState({\n            games: array,\n            deleted : true,\n        })\n        })\n    }\n\n  deletePlayerPopUp = (player_id) => {\n    confirmAlert({\n      title: 'Confirm to submit',\n        message: 'Are you sure you want to delete this player?',\n        buttons: [\n          {\n            label: 'Yes',\n            onClick: () => this.onDeletePlayer(player_id)\n          },\n          {\n            label: 'No',\n          }\n        ]\n    })\n}\n\nonDeletePlayer(player_id) {\n  api.deletePlayer(player_id)\n    .then(response => {\n        var array = [...this.state.players]\n        array = array.filter((obj) => {\n            return obj.id !== player_id\n        })\n        this.setState({\n            players: array,\n        })\n      })\n}\n\n    render() {\n      return(\n        <div>\n            <br />\n            <Leaderboard players={this.state.players} delete = {this.deletePlayerPopUp} isAdmin = {true}/>\n            <RecentGames games={this.state.games} isAdmin = {true} players={this.state.players} />\n        </div>\n      )\n    }\n}\n\nexport default Admin;","import React, { Component } from 'react';\nimport './App.css';\n\nimport {Route, Switch} from \"react-router-dom\";\nimport Index from './components/pages/index';\nimport Admin from './components/pages/admin';\n\nclass App extends Component {\n  \n\n  render() {\n    return(\n      <main>\n      <Switch>\n        <Route path='/' component={Index}/>\n        <Route path='/admin' component={Admin}/>\n      </Switch>\n    </main>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render((\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}